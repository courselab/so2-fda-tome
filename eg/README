#    SPDX-FileCopyrightText: 2021 Monaco F. J. <monaco@usp.br>
#   
#    SPDX-License-Identifier: GPL-3.0-or-later
#
#    This file was generated by SYSeg from a corresponding m4 script.
#    SYSeg is available at https://gitlab.com/monaco/syseg.

 CODE EXAMPLES
 ==============================

 Contents of syseg/eg

 Please refer to README in each subdirector for detailed information.

 * hw 	      Hello World bare metal (from machine code, to asm, up to C)
 * real	      Real-mode: segmented memory, memory-mapped io etc.
 * build      Basics of building a C program, static library
 * make	      Build automation with make, the principles
 * abi	      Application-binary interface
 * bl	      A two-state bootloeader example
 * crt	      C runtime initializer
 * format     FAT file system formatting
 * posix      Code snippets with POSIX API call examples
 * real	      Real-memory manipulation
 * rop	      Return-oriented programming examples
 * run	      Process execution
 * tyos	      A tiny real-mode OS kernel
 * tyos32     Like tyos, swithing to protected mode


